rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can manage their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Service providers (shops) can manage their own document
    match /serviceProviders/{shopId} {
        allow read, write: if request.auth != null && request.auth.uid == shopId;
    }

    // Work Orders can be read/written by the shop owner
    match /workOrders/{workOrderId} {
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/serviceProviders/$(request.auth.uid)).data.ownerId == request.auth.uid;
    }

    // Employees can be managed by the shop owner
    match /employees/{employeeId} {
       allow read, write: if request.auth != null && request.resource.data.shopId == request.auth.uid;
    }
    
    // A user's equipment and its subcollections (components)
    match /users/{userId}/equipment/{equipmentId} {
        // Allow the owner of the user document to do anything
        allow read, write: if request.auth != null && request.auth.uid == userId;
        
        // Allow a logged-in shop to also read/write the equipment data
        // This is permissive. A better rule would check for a specific relationship
        // between the shop and the user (e.g., via a work order).
        allow read, write: if request.auth != null;
    }
    
    match /users/{userId}/equipment/{equipmentId}/components/{componentId} {
        // Allow the owner of the user document to do anything
        allow read, write: if request.auth != null && request.auth.uid == userId;
        
        // Allow a logged-in shop to also read/write the component data
        allow read, write: if request.auth != null;
    }
    
    // Master components list should be readable by any authenticated user
    match /masterComponents/{masterComponentId} {
        allow get: if request.auth != null;
        // writes should only be done via trusted server-side actions
        allow list, create, update, delete: if false; 
    }
  }
}