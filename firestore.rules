
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can read and write to their own user document.
    // Shops (service providers) can read any user's document.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
      allow read: if exists(/databases/$(database)/documents/serviceProviders/$(request.auth.uid));
    }

    // Service providers (shops) can be read by anyone (so users can find them).
    // Only the shop owner can create or update their own provider document.
    match /serviceProviders/{shopId} {
      allow read: if true;
      allow create, update, delete: if request.auth.uid == shopId;
    }
    
    // An individual user can create work orders.
    // A shop can read/update work orders assigned to them.
    // The user who created the work order can also read/update it.
    match /workOrders/{workOrderId} {
      allow read, update: if request.auth.uid == resource.data.serviceProviderId || request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
      // Prevent deletion for now to maintain history.
      allow delete: if false; 
    }
    
    // Employees can only be managed by the shop owner they are assigned to.
    match /employees/{employeeId} {
      allow read, write, create, delete: if request.auth.uid == request.resource.data.shopId || request.auth.uid == resource.data.shopId;
    }
    
    // User-specific subcollections for equipment and components
    match /users/{userId}/equipment/{equipmentId} {
      // The owner of the equipment can do anything.
      // A shop owner can read/write it. This allows them to service the equipment.
      allow read, write: if request.auth.uid == userId 
                         || exists(/databases/$(database)/documents/serviceProviders/$(request.auth.uid));

      // Components follow the same rules as the equipment they belong to.
      match /components/{componentId} {
        allow read, write: if request.auth.uid == userId
                           || exists(/databases/$(database)/documents/serviceProviders/$(request.auth.uid));
      }
    }
    
    // Master components list should be readable by authenticated users (shops need it)
    // but only writable by an admin role (not implemented yet, so locked down).
    match /masterComponents/{componentId} {
        allow read: if request.auth != null;
        allow write: if false; // Protect this data
    }
  }
}
