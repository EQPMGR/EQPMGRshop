rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // A user can always read and write their own data.
    match /users/{userId}/{path=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // A service provider can read and write a user's equipment document.
    match /users/{userId}/equipment/{equipmentId} {
      allow read, write: if request.auth != null && exists(/databases/$(database)/documents/serviceProviders/$(request.auth.uid));
    }

    // A service provider can read and write a user's component documents.
    // This explicit rule is crucial for the batched write.
    match /users/{userId}/equipment/{equipmentId}/components/{componentId} {
      allow read, write: if request.auth != null && exists(/databases/$(database)/documents/serviceProviders/$(request.auth.uid));
    }

    // This is a legacy rule from the athlete's app, kept for compatibility.
    match /equipment/{equipmentId}/{document=**} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Authenticated users can read global data.
    match /bikeModels/{bikeId} {
      allow read: if request.auth != null;
    }
    match /serviceProviders/{providerId} {
        allow read: if request.auth != null;
    }
    match /masterComponents/{componentId} {
      allow read, write: if request.auth != null;
    }
     match /ignoredDuplicates/{key} {
      allow read, write: if request.auth != null;
    }
    match /trainingData/{docId} {
      allow write: if request.auth != null;
    }

    // Rules for serviceProviders collection
    match /serviceProviders/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Rules for workOrders collection
    match /workOrders/{workOrderId} {
      allow read, write: if request.auth != null && (request.auth.uid == resource.data.serviceProviderId || request.auth.uid == resource.data.userId);
    }

    // Rules for employees collection
    match /employees/{employeeId} {
      allow read, delete, update: if request.auth != null && request.auth.uid == resource.data.shopId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.shopId;
    }
  }
}
