
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin for a shop
    function isShopAdmin(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.get('roles', {})['admin'] == true;
    }

    // USER DATA: Users can read/write their own data.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // EQUIPMENT: Users can manage their own equipment.
    // Shops can manage equipment if they have an associated work order.
    match /users/{userId}/equipment/{equipmentId} {
       allow read, write: if request.auth.uid == userId ||
         exists(/databases/$(database)/documents/workOrders/$(workOrderId))
         where get(/databases/$(database)/documents/workOrders/$(workOrderId)).data.serviceProviderId == request.auth.uid
         && get(/databases/$(database)/documents/workOrders/$(workOrderId)).data.userId == userId;
    }
    

    // SERVICE PROVIDERS: Only authenticated users can read. Only shop owners can write.
    match /serviceProviders/{shopId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == shopId;
    }

    // WORK ORDERS: Only authenticated users can create. Only the user who created it
    // or the service provider assigned to it can read/update it.
    match /workOrders/{workOrderId} {
      allow read, update: if request.auth.uid == resource.data.userId || request.auth.uid == resource.data.serviceProviderId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    // EMPLOYEES: Only the shop owner can create/delete employees.
    // The shop owner and other employees of the same shop can read the employee list.
    match /employees/{employeeId} {
      allow read, list: if request.auth.uid == resource.data.shopId ||
        get(/databases/$(database)/documents/employees/$(request.auth.uid)).data.shopId == resource.data.shopId;
      
      allow create, delete, update: if request.auth.uid == request.resource.data.shopId;
    }
  }
}
